use anyhow::Result;
use std::fs;
use tauri::{api::path::cache_dir, utils::config};

fn create_folder_if_not_exists(app_name: &str) -> Result<String> {
    let cache_dir = cache_dir().ok_or(anyhow::Error::msg("Error"))?;
    let folder_path = cache_dir.join("bar-widget-manager");

    if !folder_path.exists() {
        fs::create_dir(&folder_path)?;
    }

    println!("{}", folder_path.to_string_lossy());

    Ok(folder_path.to_string_lossy().to_string())
}

#[tauri::command]
fn command_create_folder_if_not_exists() -> Result<String, InvokeError> {
    create_folder_if_not_exists().map_err(InvokeError::from_anyhow)
}

fn main() -> Result<()> {
    tauri::Builder::default()
        .setup(|app| {
            create_folder_if_not_exists(&app.package_info().name)?;
            Ok(())
        })
        .run(tauri::generate_context!())
        .expect("error while running tauri application");

    Ok(())
}
